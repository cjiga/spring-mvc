<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- Esta etiqueta es la que define donde estarán ubicados nuestros recursos, 
		como hemos mencionado anteriormente los vamos a poner en la carpeta resources, 
		al poner esta definición estamos diciendo que la aplicación tiene permiso 
		para acceder a los archivos que están dentro. Con la opción mapping="/resources/**" 
		le estamos diciendo que nos de acceso a todos los recursos dentro de esta 
		carpeta y con location="/resources/" le estamos diciendo donde se encuentra 
		la carpeta. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- Aquí le estamos indicando a la aplicación donde están todas las vistas 
		que terminan en .jsp (archivos jsp) esto es importante porque nos ahorramos 
		tener que poner la ruta completa en el controlador. -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Esta etiqueta le dice a la aplicación que busque en al paquete upv.pfc.pd 
		los controladores para las páginas, esto nos ahorra tener que declararlos 
		cada vez y poder definir los controladores más fácilmente mediante anotaciones. -->
	<context:component-scan base-package="com.axcessfinancial.spring" />

	<!-- Configurar el archivo tile-defs.xml -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configurar el archivo tile-defs.xml -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>MessageResource</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>


</beans:beans>
